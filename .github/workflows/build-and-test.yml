name: Rust CI
on:
  push:
    branches:
      - "main"
      - "staging"
  pull_request:
    branches:
      - "**"
env:
  CARGO_TERM_COLOR: always # Ensures colored output in GitHub Actions logs

jobs:
  build-and-test:
    name: Build and Test
    runs-on: linux-arm64-16c-64r-600ssd-ubuntu24

    steps:
      - name: Check out
        uses: actions/checkout@v4.1.4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Set up cargo Nextest
        run: |
          which cargo-nextest || cargo install cargo-nextest

      # - name: Copy config
      #   run: mkdir -p $HOME/.config/tracer && cp tracer.toml $HOME/.config/tracer/tracer.toml

      - name: Check Formatting
        run: cargo fmt -- --check

      - name: Lint with Clippy
        run: make clippy

      - name: Run tests
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-2"
          AWS_ENDPOINT: "https://s3.us-east-2.amazonaws.com"
          RUST_LOG: "debug"
          RUST_BACKTRACE: 1
        run: make test-tracer


  run-integrations:
    name: Build and Test Integrations
    runs-on: linux-arm64-16c-64r-600ssd-ubuntu24
    needs: []

    steps:
      - uses: actions/checkout@v4.1.4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Cache Docker images
        uses: ScribeMD/docker-cache@0.5.0
        with:
          key: ${{ runner.os }}-cargo-${{ hashFiles('tracer-client/Cargo.lock') }}

      - name: Set up cargo Nextest
        run: |
          which cargo-nextest || cargo install cargo-nextest

      - name: Create .env file from GitHub Secrets
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "AWS_REGION=us-east-2" >> .env
          echo "AWS_ENDPOINT=https://s3.us-east-2.amazonaws.com" >> .env
          echo "RUST_LOG=debug" >> .env
          echo "DATABASE_URL=postgres://postgres:postgres@db:5432/tracer_db" >> .env

      - name: Prepare cache directories for Docker
        run: |
          mkdir -p ~/.cargo/registry ~/.cargo/git ./target
          sudo chmod -R 777 ~/.cargo ./target

      - name: Update docker-compose.yml for cache sharing
        run: |
          cat > docker-compose.override.yml << EOF
          version: '3'
          services:
            integrations_tests:
              volumes:
                - ~/.cargo/registry:/root/.cargo/registry
                - ~/.cargo/git:/root/.cargo/git
                - ./target:/opt/tracer/src/target
            parallel_tests:
              volumes:
                - ~/.cargo/registry:/root/.cargo/registry
                - ~/.cargo/git:/root/.cargo/git
                - ./target:/opt/tracer/src/target
          EOF

      - name: Build Test Images
        run: |
          docker compose build integrations_tests parallel_tests

      - name: Run Simple Queries tests
        run: make test-simple_queries

      - name: Run Parallel tests
        run: make test-parallel