name: Rust CI
on:
  push:
    branches:
      - "main"
      - "staging"
  pull_request:
    branches:
      - "**"
env:
  CARGO_TERM_COLOR: always # Ensures colored output in GitHub Actions logs

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    # runs-on: 16gb-runner

    services:
      localstack:
        image: localstack/localstack:4.0.3
        env:
          SERVICES: s3,
          AWS_REGION: us-east-2
          AWS_ACCESS_KEY_ID: 000000
          AWS_SECRET_ACCESS_KEY: 000000000000
          DEBUG: 1
        ports:
          - 4566:4566
    steps:
      - uses: actions/checkout@v4.1.4

      - name: Setup Rust toolchain
        run: rustup toolchain install stable --profile minimal

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.3

      - name: Set up cargo Nextest
        run: |
          which cargo-nextest || cargo install cargo-nextest

      - name: Build
        run: cargo build --verbose

      # - name: Copy config
      #   run: mkdir -p $HOME/.config/tracer && cp tracer.toml $HOME/.config/tracer/tracer.toml

      - name: Check Formatting
        run: cargo fmt -- --check

      - name: Lint with Clippy
        run: make clippy

      - name: Run tests
        run: make test

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: rust
          path: target/nextest/default/junit.xml


  # upload-test-results:
  #     if: always()
  #     runs-on: ubuntu-latest
  #     needs: ["build-and-test"]

  #     steps:
  #     - name: Download Rust Test Output
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: rust
  #         path: ./rust

  #     - name: Publish Test Results
  #       uses: EnricoMi/publish-unit-test-result-action/macos@v2
  #       if: always()
  #       with:
  #         files: |
  #           rust/*.xml
