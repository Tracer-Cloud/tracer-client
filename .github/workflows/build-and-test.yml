name: Rust CI
on:
  push:
    branches:
      - "main"
      - "staging"
  pull_request_target:

env:
  CARGO_TERM_COLOR: always # Ensures colored output in GitHub Actions logs

jobs:
  build-and-test:
    name: Build and Test
    runs-on: linux-arm64-16c-64r-600ssd-ubuntu24

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: tracer_db
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out
        uses: actions/checkout@v4.1.4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Set up cargo Nextest
        run: |
          which cargo-nextest || cargo install cargo-nextest

      - name: Check Formatting
        run: cargo fmt -- --check

      - name: Cargo check
        run: cargo check --locked --all-targets

      - name: Lint with Clippy
        run: make clippy

      - name: Run tests
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-2"
          AWS_ENDPOINT: "https://s3.us-east-2.amazonaws.com"
          RUST_LOG: "debug"
          RUST_BACKTRACE: 1
          TRACER_DATABASE_SECRETS_ARN: ${{ secrets.TRACER_DATABASE_LOCAL_SECRETS_ARN }}
          TRACER_DATABASE_NAME: ${{ secrets.TRACER_DATABASE_NAME }}
          TRACER_DATABASE_HOST: "localhost:5432"
          DATABASE_URL: "postgresql://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/tracer_db" # localhost since VM
        run: ./scripts/migrate.sh "$DATABASE_URL" && make test-tracer

  run-integrations:
      name: Build and Test Integrations
      runs-on: linux-arm64-16c-64r-600ssd-ubuntu24
      needs: []

      steps:
      - uses: actions/checkout@v4.1.4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Cache Docker images.
        uses: ScribeMD/docker-cache@0.5.0
        with:
          key: ${{ runner.os }}-cargo-${{ hashFiles('tracer-client/Cargo.lock') }}

      - name: Set up cargo Nextest
        run: |
          which cargo-nextest || cargo install cargo-nextest

      - name: Create .env file from GitHub Secrets
        run: |
          echo "AWS_REGION=us-east-2" >> .env
          echo "AWS_ENDPOINT=https://s3.us-east-2.amazonaws.com" >> .env
          echo "RUST_LOG=debug" >> .env
          echo "DATABASE_URL=postgres://postgres:postgres@db:5432/tracer_db" >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env


      - name: Build Test Images
        run: |
          docker compose build integrations_tests parallel_tests

      - name: Run Simple Queries tests
        run: make test-simple_queries

      - name: Run Parallel tests
        run: make test-parallel

