name: Rust CI
on:
  push:
    branches:
    - "main"
    - "staging"
  pull_request:
    branches:
    - "**"
env:
  CARGO_TERM_COLOR: always # Ensures colored output in GitHub Actions logs

permissions:
  contents: read
  packages: write

jobs:
  build-and-test:
    name: Build and Test
    runs-on: linux-arm64-16c-64r-600ssd-ubuntu24

    container:
      # Use pre-built container from your GitHub Container Registry
      image: ghcr.io/tracer-cloud/tracer-cloud:rust-ci-arm64
      options: --entrypoint ""

    services:
      localstack:
        image: ghcr.io/tracer-cloud/localstack:4.0.3

        env:
          SERVICES: s3,
          AWS_REGION: us-east-2
          AWS_ACCESS_KEY_ID: 0
          AWS_SECRET_ACCESS_KEY: 0
          DEBUG: 1
        ports:
        - 4566:4566

    steps:
    - uses: actions/checkout@v4.1.4

    - name: Rust Cache
      uses: Swatinem/rust-cache@v2.7.3

    - name: Build
      run: cargo build --verbose

    - name: Check Formatting
      run: cargo fmt -- --check

    - name: Lint with Clippy
      run: make clippy

    - name: Run Tests
      run: make test

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: rust
        path: target/nextest/default/junit.xml
  # upload-test-results:
  #     if: always()
  #     runs-on: linux-arm64-16c-64r-600ssd-ubuntu24
  #     needs: ["build-and-test"]

  #     steps:
  #     - name: Download Rust Test Output
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: rust
  #         path: ./rust

  #     - name: Publish Test Results
  #       uses: EnricoMi/publish-unit-test-result-action/macos@v2
  #       if: always()
  #       with:
  #         files: |
  #           rust/*.xml
