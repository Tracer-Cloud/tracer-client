name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Update version in Cargo.toml
        run: |
          if [[ "${{ github.ref_name }}" == *"-dev" ]] ; then
            export TRACER_VERSION_DEVELOP="${{ github.ref_name }}"
            sed -i.bak "s/^version = .*/version = \"${TRACER_VERSION_DEVELOP:0:$((${#TRACER_VERSION_DEVELOP} - 4))}\"/" Cargo.toml
            sed -i.bak "s/^version = \"v/version = \"/" Cargo.toml
            sed -i.bak "s/^TRACER_VERSION_DEVELOP=\".*/TRACER_VERSION_DEVELOP=\"${{ github.ref_name }}\"/" installation-script.sh
          else
            sed -i.bak "s/^version = .*/version = \"${{ github.ref_name }}\"/" Cargo.toml
            sed -i.bak "s/^version = \"v/version = \"/" Cargo.toml
            sed -i.bak "s/^TRACER_VERSION=\".*/TRACER_VERSION=\"${{ github.ref_name }}\"/" installation-script.sh
          fi
      - name: Setup Github user
        run: |
          git config --local user.name actions-user
          git config --local user.email "actions@github.com"
      - name: Add files to commit
        run: git add Cargo.toml installation-script.sh
      - name: Commit changes
        run: git commit -m "Update version to ${{ github.ref_name }}"
      - name: Push changes
        run: git push origin HEAD:main
      - uses: taiki-e/create-gh-release-action@v1.8.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    needs: create-release
    permissions: write-all
    strategy:
      matrix:
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4.1.4
        with:
          ref: main  # Ensure weâ€™re on the main branch after create-release updates

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache Rust dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-deps-${{ matrix.target }}-stable-v1  # Stable key
          restore-keys: |
            ${{ runner.os }}-cargo-deps-${{ matrix.target }}-stable-

      - name: Cache build artifacts
        id: cache-build
        uses: actions/cache@v3
        with:
          path: target/
          key: ${{ runner.os }}-cargo-build-${{ matrix.target }}-stable-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-${{ matrix.target }}-stable-

      - name: Debug cache status
        run: |
          echo "Dependency cache hit: ${{ steps.cache-deps.outputs.cache-hit }}"
          echo "Build cache hit: ${{ steps.cache-build.outputs.cache-hit }}"
          echo "Current SHA: ${{ github.sha }}"
          echo "Ref: ${{ github.ref }}"
          echo "Event: ${{ github.event_name }}"
          echo "Target: ${{ matrix.target }}"
          echo "Cargo.toml hash: $(sha256sum Cargo.toml || shasum -a 256 Cargo.toml)"
          echo "Cargo.lock hash: $(sha256sum Cargo.lock || shasum -a 256 Cargo.lock)"

      - name: Install cross-compilation tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
        if: startsWith(matrix.os, 'ubuntu')

      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: tracer
          target: ${{ matrix.target }}
          token: ${{ secrets.GITHUB_TOKEN }}