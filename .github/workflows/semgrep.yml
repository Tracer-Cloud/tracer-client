name: Semgrep Security Scanning

permissions:
  contents: read
  security-events: write
  pull-requests: write


on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * 6'  # weekly full scan

jobs:

  semgrep:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    steps:
      - uses: actions/checkout@v4.1.4
        with:
          fetch-depth: 0

      - name: Run Semgrep scan (Rust + OWASP)
        env:
          SEMGREP_SUPPRESS_ERRORS: true
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
        # https://semgrep.dev/docs/semgrep-ci/configuring-blocking-and-errors-in-ci#configuration-options-for-blocking-findings-and-errors-in-ci
        run: |
          semgrep ci \
            --config "p/rust" \
            --config "p/owasp-top-ten" \
            --sarif --suppress-errors > semgrep.sarif || true

      - name: Upload SARIF report to GitHub Security tab
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
        uses: github/codeql-action/upload-sarif@v3.29.4
        with:
          sarif_file: semgrep.sarif
          category: semgrep


  # PR/Diff‚ÄëAware Scan
  semgrep-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    steps:
      - uses: actions/checkout@v4.1.4
        with:
          fetch-depth: 0

      - name: Run Semgrep diff-aware scan (Rust + OWASP)
        env:
          BASELINE_COMMIT: ${{ github.event.pull_request.base.sha }}
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
        run: |
          semgrep scan \
            --error \
            --metrics=off \
            --baseline-commit "$BASELINE_COMMIT" \
            --config "p/rust" \
            --config "p/owasp-top-ten" \
            --config "p/secrets" \
            --config "p/default"

      - name: Save full Semgrep scan (Rust + OWASP + Secrets, scoped to Rust files)
        if: always()
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
        run: |
          semgrep scan \
            --error \
            --metrics=off \
            --config "p/rust" \
            --config "p/owasp-top-ten" \
            --config "p/secrets" \
            --include '**/*.rs' \
            --include 'Cargo.toml' \
            --include 'Cargo.lock' \
            --exclude '**/tests/**' \
            --exclude 'src/ebpf/**' \
            --json > semgrep.json || true

          echo "## üïµÔ∏è Semgrep Findings" > semgrep.md

          count=$(jq '.results | length' semgrep.json)
          if [ "$count" -eq 0 ]; then
            echo "‚úÖ No findings found." >> semgrep.md
          else
            echo "Found $count issue(s):" >> semgrep.md
            echo "" >> semgrep.md
            jq -r '
              .results[] |
              "### üîç [`\(.check_id)`](\(.extra.metadata.source // "#")) ‚Äì **\(.extra.severity // "UNKNOWN")**\n" +
              "**File:** `\(.path):\(.start.line)`\n" +
              "**Message:** \(.extra.message)\n\n" +
              "<details><summary>Code Snippet</summary>\n\n```rust\n\(.extra.lines)\n```\n</details>\n"
            ' semgrep.json >> semgrep.md
          fi

      - name: Comment on PR with Semgrep findings
        if: always()
        uses: marocchino/sticky-pull-request-comment@v2.9.4
        with:
          header: semgrep
          path: semgrep.md
          recreate: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


            
  