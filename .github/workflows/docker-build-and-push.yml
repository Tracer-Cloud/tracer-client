name: Build and Push Docker Image
on:
  push:
    branches:
    - main

<<<<<<< HEAD
=======
env:
  CARGO_TERM_COLOR: always
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_REGION: "us-east-1"
  AWS_ENDPOINT: "https://s3.us-east-2.amazonaws.com"
  RUST_LOG: "debug"
  RUST_BACKTRACE: 1

>>>>>>> origin/main
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

<<<<<<< HEAD
    - name: Log in to GitHub Container Registry
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build Docker Image
      run: docker build -t ghcr.io/tracer-cloud/tracer-cloud:rust-ci-arm64 .

    - name: Push Docker Image
      run: docker push ghcr.io/tracer-cloud/tracer-cloud:rust-ci-arm64
=======
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Build and push container
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
        # Delete previous image if it exists
        aws ecr batch-delete-image \
          --repository-name tracer-client \
          --image-ids imageTag=latest \
          --region $AWS_REGION || true
        docker build -t tracer-client:latest .
        docker tag tracer-client:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/tracer-client:latest
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/tracer-client:latest
>>>>>>> origin/main
