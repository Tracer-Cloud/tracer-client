name: Rust Cache S3
on:
  push:
    branches:
      - "staging"
  pull_request:
    branches:
      - "**"

env:
  CARGO_TERM_COLOR: always
  S3_BUCKET: cargo-actions-build-cache
  AWS_REGION: "us-east-1"
  CACHE_TAR: rust-cache.tar.gz

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.1.4

      - name: Setup Rust toolchain
        run: |
          rustup toolchain install stable --profile minimal
          # Fix cargo permissions
          sudo chown -R $(whoami):$(whoami) ~/.cargo
          sudo chmod -R u+rwX ~/.cargo
          sudo chmod +x ~/.cargo/bin/cargo

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Initialize cargo directories
        run: |
          mkdir -p ~/.cargo/registry/cache
          mkdir -p ~/.cargo/registry/index
          mkdir -p ~/.cargo/registry/src
          mkdir -p ~/.cargo/git/db
          mkdir -p ~/.cargo/git/checkouts
          # Ensure correct permissions
          chmod -R u+rwX ~/.cargo

      - name: Load Rust build cache from S3
        run: |
          if aws s3 ls "s3://$S3_BUCKET/$CACHE_TAR" --region $AWS_REGION >/dev/null 2>&1; then
            echo "Cache found. Downloading from S3..."
            aws s3 cp "s3://$S3_BUCKET/$CACHE_TAR" . --region $AWS_REGION
            echo "Verifying cache integrity..."
            if ! tar -tzf "$CACHE_TAR" > /dev/null; then
              echo "Cache archive is corrupted, skipping restore"
              exit 0
            fi
            echo "Extracting cache..."
            tar -xzf "$CACHE_TAR" -C ~/.cargo
            echo "Cache extracted successfully"
            # Fix permissions after extraction
            chmod -R u+rwX ~/.cargo
            chmod +x ~/.cargo/bin/cargo
          else
            echo "No cache found, continuing without restoring."
          fi

      - name: Build
        run: cargo build

      - name: Save Rust build cache to S3
        if: always()  # Save cache even if build fails
        run: |
          echo "Creating new cache archive..."
          tar -czf "$CACHE_TAR" -C ~/.cargo .
          echo "Uploading cache to S3..."
          aws s3 cp "$CACHE_TAR" "s3://$S3_BUCKET/$CACHE_TAR" --region $AWS_REGION

      - name: Debug - List ~/.cargo after build
        run: |
          echo "Final content of ~/.cargo:"
          ls -laR ~/.cargo