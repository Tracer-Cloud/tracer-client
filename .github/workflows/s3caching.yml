name: Rust Cache S3
on:
  push:
    branches:
      - "staging"
  pull_request:
    branches:
      - "**"

env:
  CARGO_TERM_COLOR: always
  S3_BUCKET: cargo-actions-build-cache
  AWS_REGION: "us-east-1"
  CACHE_TAR: rust-cache.tar.gz

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.1.4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Prepariamo le directory prima di scaricare la cache
      - name: Prepare cargo directories
        run: |
          mkdir -p ~/.cargo/registry/cache
          mkdir -p ~/.cargo/registry/index
          mkdir -p ~/.cargo/registry/src
          mkdir -p ~/.cargo/git/db
          mkdir -p ~/.cargo/git/checkouts

      # Scarichiamo e verifichiamo la cache
      - name: Load Rust build cache from S3
        run: |
          if aws s3 ls "s3://$S3_BUCKET/$CACHE_TAR" --region $AWS_REGION >/dev/null 2>&1; then
            echo "Cache found. Downloading from S3..."
            aws s3 cp "s3://$S3_BUCKET/$CACHE_TAR" . --region $AWS_REGION
            echo "Extracting cache..."
            tar -xzf "$CACHE_TAR" -C ~/.cargo
            echo "Cache extracted successfully"
          
            # Debug: mostra il contenuto della cache
            echo "Cache contents:"
            ls -la ~/.cargo/registry/cache
            ls -la ~/.cargo/registry/src
            ls -la ~/.cargo/git/db
          else
            echo "No cache found, continuing without restoring."
          fi

      # Prima di buildare, verifichiamo che cargo possa leggere la cache
      - name: Verify cargo cache
        run: |
          echo "Cargo registry contents:"
          ls -la ~/.cargo/registry/cache/
          echo "Cargo git contents:"
          ls -la ~/.cargo/git/db/
          cargo --version
          echo "Cache size:"
          du -sh ~/.cargo/registry/cache ~/.cargo/git/db

      - name: Build
        run: |
          # Puliamo la cache degli artefatti compilati, ma manteniamo i download
          cargo clean
          RUST_LOG=debug cargo build -v

      - name: Save Rust build cache to S3
        if: success()  # Salviamo solo se il build Ã¨ riuscito
        run: |
          echo "Creating new cache archive..."
          tar -czf "$CACHE_TAR" -C ~/.cargo registry git
          echo "Cache size before upload:"
          du -sh "$CACHE_TAR"
          echo "Uploading cache to S3..."
          aws s3 cp "$CACHE_TAR" "s3://$S3_BUCKET/$CACHE_TAR" --region $AWS_REGION