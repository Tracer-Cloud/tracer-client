name: Development Release On S3

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-release:
    permissions: write-all
    strategy:
      matrix:
        include:
          - arch: x86_64
            target: x86_64-unknown-linux-gnu
            runner: ubuntu-latest
          - arch: aarch64
            target: aarch64-unknown-linux-gnu
            runner: ubuntu-22.04-arm  # Native ARM runner

    runs-on: ${{ matrix.runner }}

    steps:
      - uses: actions/checkout@v4.1.4

      - name: Update version in Cargo.toml
        run: |
          # Format: vYYYY.MM.DD.HH (e.g., v2025.03.27.22)
          DATE_TAG=$(date -u +"v%Y.%m.%d.%H")

          # Extract date components using cut and remove leading zeros
          YEAR=$(echo ${DATE_TAG} | cut -d'v' -f2 | cut -d'.' -f1)
          MONTH=$(echo ${DATE_TAG} | cut -d'.' -f2 | sed 's/^0*//')
          DAY=$(echo ${DATE_TAG} | cut -d'.' -f3 | sed 's/^0*//')
          HOUR=$(echo ${DATE_TAG} | cut -d'.' -f4)

          # Resolve branch name from PR or fallback to ref_name
          BRANCH="${{ github.event.pull_request.head.ref || github.ref_name }}"

          # Sanitize branch name for Cargo SemVer metadata
          BRANCH_NAME=$(echo "$BRANCH" | tr '/' '-' | tr '_' '-' | sed 's/[^a-zA-Z0-9-]//g')

          # Compose SemVer-compatible version string
          CARGO_VERSION="${YEAR}.${MONTH}.${DAY}+${HOUR}-${BRANCH_NAME}"

          # Update version in Cargo.toml
          sed -i.bak "s/^version = .*/version = \"${CARGO_VERSION}\"/" Cargo.toml

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install target
        run: rustup target add ${{ matrix.target }}

      - name: Cache Rust dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: cargo-deps-${{ matrix.target }}-stable-v1
          restore-keys: |
            cargo-deps-${{ matrix.target }}-stable-

      - name: Cache build artifacts
        id: cache-build
        uses: actions/cache@v3
        with:
          path: |
            target/
          key: cargo-build-${{ matrix.target }}-stable-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            cargo-build-${{ matrix.target }}-stable-

      - name: Build the binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare binary for release
        run: |
          mkdir -p release-files/${{ matrix.arch }}
          cp target/${{ matrix.target }}/release/tracer release-files/${{ matrix.arch }}/tracer
          chmod +x release-files/${{ matrix.arch }}/tracer
          tar -czf release-files/tracer-${{ matrix.target }}.tar.gz -C release-files/${{ matrix.arch }} tracer

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Upload to S3
        run: |
          aws s3 cp release-files/tracer-${{ matrix.target }}.tar.gz s3://tracer-releases/tracer-${{ matrix.target }}.tar.gz