use serde::{Deserialize, Serialize};

/*
Example of custom claims for the tracer jwt generated by Clerk:
{
    "email": "{{user.primary_email_address}}",
    "full_name": "{{user.full_name}}",
    "organization": "{{org.id}}"
}
*/

/// struct for the claims of the jwt token generated by Clerk
#[derive(Debug, Serialize, Deserialize, Clone)]
pub struct Claims {
    pub sub: String, // Subject - this will be the user id
    pub exp: usize,  // Expiration date
    pub iat: usize,  // Issued at

    // custom fields
    pub email: String,
    pub full_name: String,
    pub organization: Option<String>, // also the organization is optional for now, until we have a better way to handle it
    pub organization_slug: String, //organization slug is required to generate the url for the run details page
}

impl Claims {
    /// Getting the first word in the full name and considering as name
    pub fn get_name_from_full_name(&self) -> String {
        let full_name_vector = &self.full_name.split(" ").collect::<Vec<&str>>();
        full_name_vector[0].to_string()
    }
}
